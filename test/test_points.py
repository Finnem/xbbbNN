
from pymol.cgo import *
from pymol import cmd
import numpy as np
from chempy.brick import Brick
from collections import defaultdict
positions_viewport_callbacks = defaultdict(lambda: defaultdict(lambda: ViewportCallback([],0,0)))


Points_0 = [
        
COLOR,1.0,0.0,0.0,1.0,SPHERE,-88.249,-27.162,-0.47,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-84.708,-28.966,0.22,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-81.029,-26.465,0.504,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-85.612,-24.118,-2.933,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-82.076,-22.095,15.38,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-84.617,-26.23,14.393,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-83.195,-28.628,12.247,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-84.059,-29.51,10.429,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-83.95,-29.379,8.142,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-91.389,-26.436,-2.056,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-92.219,-22.099,-3.686,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-91.807,-26.261,10.038,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-89.413,-27.388,13.385,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-87.711,-28.798,11.086,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-93.887,-19.966,14.746,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-94.128,-17.796,14.452,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-98.417,-11.233,6.541,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-98.364,-14.187,7.828,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-97.397,-17.032,4.979,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-98.468,-18.44,0.306,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-98.36,-24.402,6.575,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-96.811,-21.643,5.421,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-95.294,-12.759,1.736,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-96.181,-12.882,3.724,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-82.8,-5.244,9.62,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-79.952,-5.562,11.144,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-82.439,-8.875,12.763,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-81.413,-8.553,14.669,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-78.282,-7.036,8.383,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-79.143,-4.822,6.182,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-76.482,-9.544,5.753,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-75.58,-9.962,7.712,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-88.457,-6.782,15.482,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-86.272,-7.378,12.834,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-90.887,-9.869,13.202,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-88.52,-12.228,16.397,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-87.852,-7.081,0.285,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-91.001,-7.215,0.045,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-88.828,-9.429,-3.955,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-91.013,-6.439,3.685,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-93.962,-5.333,6.634,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-92.461,-8.814,9.45,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-95.2,-10.829,10.767,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-93.274,-11.664,14.686,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-94.348,-13.511,17.177,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-91.671,-15.511,17.648,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-90.739,-13.614,18.242,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-93.97,-22.202,15.585,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-80.486,-8.502,0.735,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-89.067,-25.686,15.249,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-83.653,-13.315,18.967,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-75.666,-14.428,6.898,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-89.377,-15.776,19.661,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-76.894,-12.233,5.227,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-86.576,-13.716,17.612,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-93.39,-11.527,0.192,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-98.699,-10.823,3.778,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-96.454,-9.266,-0.211,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-91.633,-10.615,-2.952,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-79.615,-11.032,14.063,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-86.458,-11.815,-5.635,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-82.095,-21.564,-2.977,0.3

            ]
cmd.load_cgo(Points_0, "Points_0", state=1)
cmd.set("cgo_transparency", 0, "Points_0")
        

for x in positions_viewport_callbacks:
    for y in positions_viewport_callbacks[x]:
        positions_viewport_callbacks[x][y].load()
